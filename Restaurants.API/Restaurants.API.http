@hostname = https://localhost
@port = 7227
@token = CfDJ8DfAeHPaQd1PvpvdU91NUDGHteTYEtfyzqhbIRDRKcYbP78ZRyownzNLlw0FZxXacNpeec9FUL9AoijtIsZ73gHFgXEMHonbUM6in0KvHo4RCmRR44neKqSlLYF-tP1IN8ZKYiKWg4iGeC2_2saKzNWa4TTdWjvDxxDMkXJSDFhOfqXAKL-jry4Rcbxr2PS6ITwvLIp1IDG4tSrw8Br3FofvZFtEl1O0BawWg-nwWwVUfBcqF8OPjTw8caVKD1yTVHBXGHl98HZrE_jH2XXr0TqhMa2rD-C5Vrp8Q-pFTH75UPDFNvM-CeYndbEGWWshJGZ6HyztPyXtLzqQ8iZNCa7MK52Jl0xXKu5-1aabdLgyt5SXvs7yTaG5Gap2GvD8aEyqbKqNP0Vf_c9ZSe1950BMoUEizzbrzEvbV5QATOt9HtW3iiZNkWY7Bn8rOFDZGDvb0Fp4xRWcMJr8YFKypy_ZjG9Fno8HK4hwESVVC9kG-HBgx6bbc2o3GyJN_j_CPP_yRtjNldkr5TDqPVhW6VuCHkQ8W4KlUxcTe4-N5YUWUbRtyLTCCydkzp8K8C9Az1M6YzzMui2XxB1Di3jwatTNGfS2Uevg2m_qvCyo-KxgV7AevazGNq5sB-dxMI0IvlSDc15s5JHidIwP89xVZ2aDiGt1bSgH6qbzosevCIC79xLG5wlKEy6PnxMm9bhyxYfkzrJhCJinYBI2XCHHnOm8D78aGnia0quwtb38Qs9gDq6W09LjeXfR4s49OydW4IEgexB3PF5fc3ZqhSsHsX0QZQKoZjnFa67LXgUW2aQ3

@Restaurants.API_HostAddress = {{hostname}}:{{port}}

# ===================================
# Region: Restaurants Endpoints
# ===================================

### Create New Restaurant
POST {{Restaurants.API_HostAddress}}/api/restaurants
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "name": "Bella Gelato",
  "description": "An Italian gelato shop offering a variety of handcrafted frozen treats.",
  "category": "Indian",
  "hasDelivery": false,
  "contactEmail": "hello@bellagelato.com",
  "contactNumber": "+15553344",
  "city": "San Diego",
  "street": "444 Sweet Lane",
  "postalCode": "92-101"
}

### Get All Restaurants
GET {{Restaurants.API_HostAddress}}/api/restaurants
Authorization: Bearer {{token}}

### Get Single Restaurant
GET {{Restaurants.API_HostAddress}}/api/restaurants/3
Authorization: Bearer {{token}}

### Update Restaurant
PATCH {{Restaurants.API_HostAddress}}/api/restaurants/5
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "name": "Green Garden Cafe Updated",
  "description": "A cozy cafe focused on organic and plant-based meals.",
  "hasDelivery": true
}

### Delete Restaurant
DELETE {{Restaurants.API_HostAddress}}/api/restaurants/5
Authorization: Bearer {{token}}


###
# ===================================
# Region: Dishes Endpoints
# ===================================

### Create New Dish for Restaurant
POST {{Restaurants.API_HostAddress}}/api/restaurant/3/dishes
Content-Type: application/json

{
  "name": "Caesar Salad",
  "description": "Fresh romaine lettuce with Caesar dressing, croutons, and Parmesan cheese.",
  "price": 7.49,
  "kiloCalories": 300
}

### Get All Dishes for a Restaurant
GET {{Restaurants.API_HostAddress}}/api/restaurant/1/dishes
Authorization: Bearer {{token}}

### Get Single Dish for a Restaurant
GET {{Restaurants.API_HostAddress}}/api/restaurant/2/dishes/4

### Delete Single Dish for a Restaurant
DELETE {{Restaurants.API_HostAddress}}/api/restaurant/2/dishes/3

### Update Dish for a Restaurant
PATCH {{Restaurants.API_HostAddress}}/api/restaurant/2/dishes/3
Content-Type: application/json

{
  "name": "Spaghetti Bolognese",
  "description": "A classic Italian pasta dish with rich meat sauce.",
  "price": 15.99,
  "kiloCalories": 820
}

### Delete All Dishes for a Restaurant
DELETE {{Restaurants.API_HostAddress}}/api/restaurant/2/dishes

###
# ===================================
# Region: User Endpoints
# ===================================

### Create New User
POST {{Restaurants.API_HostAddress}}/api/identity/register
Content-Type: application/json

{
  "email": "owner2@example.com",
  "password": "Password1!"
}

### Login
POST {{Restaurants.API_HostAddress}}/api/identity/login
Content-Type: application/json

{
  "email": "owner2@example.com",
  "password": "Password1!"
}

### Update User
PATCH {{Restaurants.API_HostAddress}}/api/identity/user
Authorization: Bearer {{token}}
Content-Type: application/json

{
  "firstName": "Mahmoud",
  "lastName": "Saleh",
  "dateOfBirth": "2010-10-19",
  "nationality": "Egyptian"
}

### Assign User Role
PATCH {{Restaurants.API_HostAddress}}/api/identity/userRole
Authorization: Bearer {{token}}
Content-Type: application/json

{
   "userEmail": "owner2@example.com",
   "roleName": "Owner"
}

### Unassign User Role
DELETE {{Restaurants.API_HostAddress}}/api/identity/userRole
Authorization: Bearer {{token}}
Content-Type: application/json

{
   "userEmail": "owner2@example.com",
   "roleName": "Owner"
}

###
